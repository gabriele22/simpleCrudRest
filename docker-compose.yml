services:
  postgres:
    image: postgres:16-alpine
    container_name: petdb-postgres
    environment:
      POSTGRES_DB: petdb
      POSTGRES_USER: petuser
      POSTGRES_PASSWORD: petpass123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pet-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U petuser -d petdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: petapi-app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/petdb
      SPRING_DATASOURCE_USERNAME: petuser
      SPRING_DATASOURCE_PASSWORD: petpass123
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pet-network

  # Optional: pgAdmin for database management UI
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: petdb-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - pet-network
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  pet-network:
    driver: bridge